@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using EleVehicleDealer.DAL.EntityModels
@model IEnumerable<EleVehicleDealer.DAL.EntityModels.Vehicle>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    var username = Context.Session?.GetString("Username") ?? string.Empty;
    var isLoggedIn = !string.IsNullOrEmpty(username);
    var accountId = Context.Session?.GetInt32("AccountId") ?? 0;
    var userRole = "Customer";

    var error = ViewBag.Error as string ?? TempData["Error"] as string ?? string.Empty;
    var vehicleTypes = ViewBag.VehicleTypes as List<string> ?? new List<string>();
    var vehicleModels = ViewBag.VehicleModels as List<string> ?? new List<string>();
    var sortBy = ViewBag.SortBy as string ?? "";
    var filterType = ViewBag.FilterType as string ?? "";
    var filterModel = ViewBag.FilterModel as string ?? "";
    var minPrice = ViewBag.MinPrice as decimal? ?? null;
    var maxPrice = ViewBag.MaxPrice as decimal? ?? null;
}

<header class="site-header">
    <div class="header-container">
        <div class="logo-section">
            <a asp-controller="Home" asp-action="Index" class="logo">EleVehicle Dealer</a>
        </div>
        <nav class="main-navigation">
            <ul>
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a asp-controller="Menu" asp-action="Index">Menu</a></li>
                <li><a asp-controller="Category" asp-action="Index">Category</a></li>
                <li><a asp-controller="Home" asp-action="About">About</a></li>
                <li><a asp-controller="Home" asp-action="Contact">Contact</a></li>
            </ul>
        </nav>
        <div class="auth-section">
            @if (isLoggedIn)
            {
                <span class="welcome">Welcome, @username</span>
                @if (userRole == "Admin")
                {
                    <a asp-controller="Admin" asp-action="Dashboard" class="btn-admin">Admin Panel</a>
                }
                <a asp-controller="Account" asp-action="Logout" class="btn-logout">Logout</a>
            }
            else
            {
                <a asp-controller="Account" asp-action="Login" class="btn-login" id="loginLink">Login</a>
                <a asp-controller="Account" asp-action="Register" class="btn-register" id="registerLink">Register</a>
            }
        </div>
    </div>
</header>

<div class="main-container">
    @if (!string.IsNullOrEmpty(error))
    {
        <div class="alert alert-danger">@error</div>
    }

    <h2>Welcome to EleVehicle Dealer</h2>

    <form method="get" asp-controller="Home" asp-action="Home" class="advanced-filter-container" id="filterForm">
        <div class="filter-row">
            <div class="filter-group">
                <label for="sortBy">Sort By:</label>
                <select id="sortBy" name="sortBy" class="form-control">
                    <!option value="alphabet" selected="@(sortBy == "alphabet" ? "selected" : "")">Alphabet (A-Z)</!option>
                    <!option value="alphabet_desc" selected="@(sortBy == "alphabet_desc" ? "selected" : "")">Alphabet (Z-A)</!option>
                    <!option value="price" selected="@(sortBy == "price" ? "selected" : "")">Price (Low to High)</!option>
                    <!option value="price_desc" selected="@(sortBy == "price_desc" ? "selected" : "")">Price (High to Low)</!option>
                    <!option value="type" selected="@(sortBy == "type" ? "selected" : "")">Type (A-Z)</!option>
                    <!option value="type_desc" selected="@(sortBy == "type_desc" ? "selected" : "")">Type (Z-A)</!option>
                </select>
            </div>

            <div class="filter-group">
                <label for="filterType">Filter by Type:</label>
                <select id="filterType" name="filterType" class="form-control">
                    <!option value="All" selected="@(string.IsNullOrEmpty(filterType) || filterType == "All" ? "selected" : "")">All Types</!option>
                    @foreach (var type in vehicleTypes)
                    {
                        <!option value="@type" selected="@(filterType == type ? "selected" : "")">@type</!option>
                    }
                </select>
            </div>

            <div class="filter-group">
                <label for="filterModel">Filter by Model:</label>
                <select id="filterModel" name="filterModel" class="form-control">
                    <!option value="All" selected="@(string.IsNullOrEmpty(filterModel) || filterModel == "All" ? "selected" : "")">All Models</!option>
                    @foreach (var vehicleModel in vehicleModels)
                    {
                        <!option value="@vehicleModel" selected="@(filterModel == vehicleModel ? "selected" : "")">@vehicleModel</!option>
                    }
                </select>
            </div>
        </div>

        <div class="filter-row">
            <div class="filter-group price-group">
                <label for="minPrice">Min Price:</label>
                <input type="number" id="minPrice" name="minPrice" class="form-control price-input"
                       placeholder="Min" value="@minPrice" step="1000" min="0">
            </div>

            <div class="filter-group price-group">
                <label for="maxPrice">Max Price:</label>
                <input type="number" id="maxPrice" name="maxPrice" class="form-control price-input"
                       placeholder="Max" value="@maxPrice" step="1000" min="0">
            </div>

            <div class="filter-group">
                <button type="submit" class="btn-filter">Apply Filters</button>
                <button type="button" class="btn-clear" onclick="clearFilters()">Clear All</button>
            </div>
        </div>
    </form>

    <div class="display-options">
        <div class="filter-group">
            <label for="cardsPerRow">Cards per row:</label>
            <select id="cardsPerRow" class="form-control" onchange="adjustGridColumns()">
                <option value="3">3 Cards</option>
                <option value="4" selected>4 Cards</option>
                <option value="5">5 Cards</option>
                <option value="6">6 Cards</option>
            </select>
        </div>
        <div class="results-count">
            <span>Showing @Model.Count() vehicles</span>
        </div>
    </div>

    <div class="vehicle-grid" id="vehicleGrid" data-columns="4">
        @foreach (var v in Model)
        {
            <div class="vehicle-card">
                <div class="image-container">
                    <img src="@Url.Content("~/images/" + v.Model.Replace(" ", "-") + ".jpg")"
                         alt="@v.Model"
                         onerror="this.src='@Url.Content("~/images/111.jpg")'" />
                </div>
                <div class="vehicle-card-content">
                    <h4>@v.Model</h4>
                    <p><strong>Type:</strong> <span>@v.Type</span></p>
                    <p><strong>Color:</strong> <span>@v.Color</span></p>
                    <p class="price"><strong>Price:</strong> <span>@v.Price.ToString("C")</span></p>
                    <button class="btn-buy">Buy Now</button>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function adjustGridColumns() {
        const grid = document.getElementById('vehicleGrid');
        const cardsPerRow = document.getElementById('cardsPerRow').value;
        grid.setAttribute('data-columns', cardsPerRow);

        grid.style.transition = 'all 0.3s ease';
        setTimeout(() => {
            grid.style.transition = '';
        }, 300);
    }

    function clearFilters() {
        document.getElementById('sortBy').value = 'alphabet';
        document.getElementById('filterType').value = 'All';
        document.getElementById('filterModel').value = 'All';
        document.getElementById('minPrice').value = '';
        document.getElementById('maxPrice').value = '';
        document.getElementById('filterForm').submit();
    }

    function autoSubmitFilter() {
        document.getElementById('filterForm').submit();
    }

    document.addEventListener('DOMContentLoaded', function() {
        adjustGridColumns();

        if (document.getElementById('sortBy')) {
            document.getElementById('sortBy').addEventListener('change', autoSubmitFilter);
        }
        if (document.getElementById('filterType')) {
            document.getElementById('filterType').addEventListener('change', autoSubmitFilter);
        }
        if (document.getElementById('filterModel')) {
            document.getElementById('filterModel').addEventListener('change', autoSubmitFilter);
        }
    });

    document.getElementById('minPrice').addEventListener('change', function() {
        const minPrice = parseFloat(this.value);
        const maxPrice = parseFloat(document.getElementById('maxPrice').value);

        if (maxPrice && minPrice > maxPrice) {
            document.getElementById('maxPrice').value = minPrice;
        }
    });

    document.getElementById('maxPrice').addEventListener('change', function() {
        const maxPrice = parseFloat(this.value);
        const minPrice = parseFloat(document.getElementById('minPrice').value);

        if (minPrice && maxPrice < minPrice) {
            document.getElementById('minPrice').value = maxPrice;
        }
    });

    document.getElementById('loginLink')?.addEventListener('click', function(e) {
        console.log('Login link clicked, redirecting to /Account/Login');
    });

    document.getElementById('registerLink')?.addEventListener('click', function(e) {
        console.log('Register link clicked, redirecting to /Account/Register');
    });
</script>

<style>
    .site-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 15px 0;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1000;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .header-container {
        max-width: 1400px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 30px;
    }

    .logo-section .logo {
        color: white;
        font-size: 1.8rem;
        font-weight: 700;
        text-decoration: none;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .main-navigation ul {
        list-style: none;
        display: flex;
        gap: 25px;
        margin: 0;
        padding: 0;
    }

    .main-navigation a {
        color: white;
        text-decoration: none;
        font-weight: 600;
        font-size: 14px;
        text-transform: uppercase;
        transition: color 0.3s ease;
    }

        .main-navigation a:hover {
            color: #ffd700;
        }

    .auth-section {
        display: flex;
        align-items: center;
        gap: 15px;
    }

        .auth-section a,
        .auth-section span {
            color: white;
            font-weight: 600;
            font-size: 14px;
        }

    .btn-login, .btn-register, .btn-logout, .btn-admin {
        padding: 8px 20px;
        border-radius: 20px;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .btn-login {
        background: rgba(255, 255, 255, 0.2);
    }

        .btn-login:hover {
            background: rgba(255, 255, 255, 0.3);
        }

    .btn-register {
        background: #28a745;
    }

        .btn-register:hover {
            background: #218838;
        }

    .btn-logout {
        background: #dc3545;
    }

        .btn-logout:hover {
            background: #c82333;
        }

    .btn-admin {
        background: #17a2b8;
    }

        .btn-admin:hover {
            background: #138496;
        }

    .welcome {
        margin-right: 10px;
    }

    body {
        padding-top: 70px;
    }

    .main-container {
        max-width: 1400px;
        margin: 0 auto 20px auto;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    h2 {
        text-align: center;
        color: #2c3e50;
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 30px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .alert {
        padding: 15px 20px;
        border-radius: 12px;
        margin-bottom: 25px;
        font-weight: 500;
        border: none;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .alert-danger {
        background: linear-gradient(135deg, #ff6b6b, #ee5a52);
        color: white;
    }

    .advanced-filter-container {
        background: white;
        padding: 25px;
        border-radius: 15px;
        margin-bottom: 25px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        position: relative;
        overflow: hidden;
    }

    .filter-row {
        display: flex;
        align-items: center;
        gap: 20px;
        flex-wrap: wrap;
        margin-bottom: 20px;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
        min-width: 150px;
        flex: 1;
    }

        .filter-group.price-group {
            min-width: 120px;
        }

        .filter-group label {
            font-weight: 600;
            color: #2c3e50;
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin: 0;
        }

    .form-control {
        padding: 12px 16px;
        border-radius: 10px;
        border: 2px solid #e1e8ed;
        font-size: 14px;
        font-weight: 500;
        color: #2c3e50;
        background: white;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .price-input {
        cursor: text;
    }

    .btn-filter, .btn-clear {
        padding: 12px 24px;
        border: none;
        border-radius: 10px;
        font-weight: 600;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-right: 10px;
    }

    .btn-filter {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

        .btn-filter:hover {
            background: linear-gradient(135deg, #5a6fd8, #6a4190);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(102, 126, 234, 0.4);
        }

    .btn-clear {
        background: linear-gradient(135deg, #6c757d, #495057);
        color: white;
        box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
    }

        .btn-clear:hover {
            background: linear-gradient(135deg, #5a6268, #343a40);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(108, 117, 125, 0.4);
        }

    .display-options {
        background: white;
        padding: 15px 20px;
        border-radius: 12px;
        margin-bottom: 20px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
    }

    .results-count {
        color: #6c757d;
        font-weight: 600;
        font-size: 14px;
    }

        .results-count span {
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 700;
        }

    .vehicle-grid {
        display: grid;
        gap: 25px;
        margin-top: 30px;
        padding: 10px;
        grid-template-columns: repeat(4, 1fr); /* Mặc định 4 cột */
    }

    .vehicle-card {
        background: white;
        border-radius: 20px;
        padding: 0;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        text-align: center;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        border: 2px solid transparent;
        overflow: hidden;
        position: relative;
    }

        .vehicle-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, #667eea, #764ba2);
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 0;
        }

        .vehicle-card:hover::before {
            opacity: 0.05;
        }

        .vehicle-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
            border-color: rgba(102, 126, 234, 0.3);
        }

    .image-container {
        width: 100%;
        height: 220px;
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 20px 20px 0 0;
        margin-bottom: 0;
        position: relative;
        overflow: hidden;
        border: none;
        box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.05);
    }

        .image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.4s ease;
            border-radius: 0;
        }

    .vehicle-card:hover .image-container img {
        transform: scale(1.1);
    }

    .vehicle-card-content {
        padding: 25px 20px;
        position: relative;
        z-index: 1;
    }

    .vehicle-card h4 {
        margin: 0 0 15px 0;
        font-size: 1.4rem;
        color: #2c3e50;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .vehicle-card p {
        margin: 8px 0;
        color: #6c757d;
        font-size: 14px;
        font-weight: 500;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 5px 0;
    }

        .vehicle-card p.price {
            font-size: 1.2rem;
            font-weight: 700;
            color: #28a745;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 2px solid #f8f9fa;
        }

        .vehicle-card p strong {
            color: #495057;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 12px;
            letter-spacing: 0.5px;
        }

    .btn-buy {
        margin-top: 20px;
        padding: 14px 30px;
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        font-weight: 600;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
        box-shadow: 0 8px 20px rgba(40, 167, 69, 0.3);
        position: relative;
        overflow: hidden;
        width: 80%;
    }

        .btn-buy::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn-buy:hover::before {
            left: 100%;
        }

        .btn-buy:hover {
            background: linear-gradient(135deg, #218838, #1ea085);
            transform: translateY(-2px);
            box-shadow: 0 12px 30px rgba(40, 167, 69, 0.4);
        }

        .btn-buy:active {
            transform: translateY(0);
            box-shadow: 0 6px 15px rgba(40, 167, 69, 0.3);
        }
</style>